// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ServerLibrary.Data;

#nullable disable

namespace ServerLibrary.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241223172024_NewCreate")]
    partial class NewCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BaseLibrary.Entities.ApplicationUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ApplicationUsers");
                });

            modelBuilder.Entity("BaseLibrary.Entities.Branch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("branches");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DepartmentId = 1,
                            Name = "Branch-I"
                        },
                        new
                        {
                            Id = 2,
                            DepartmentId = 2,
                            Name = "Branch-I"
                        },
                        new
                        {
                            Id = 3,
                            DepartmentId = 3,
                            Name = "Branch-I"
                        },
                        new
                        {
                            Id = 4,
                            DepartmentId = 4,
                            Name = "Branch-I"
                        },
                        new
                        {
                            Id = 5,
                            DepartmentId = 5,
                            Name = "Branch-I"
                        },
                        new
                        {
                            Id = 6,
                            DepartmentId = 6,
                            Name = "Branch-I"
                        },
                        new
                        {
                            Id = 7,
                            DepartmentId = 4,
                            Name = "Branch-II"
                        },
                        new
                        {
                            Id = 8,
                            DepartmentId = 5,
                            Name = "Branch-II"
                        },
                        new
                        {
                            Id = 9,
                            DepartmentId = 6,
                            Name = "Branch-II"
                        },
                        new
                        {
                            Id = 10,
                            DepartmentId = 7,
                            Name = "Branch-II"
                        },
                        new
                        {
                            Id = 11,
                            DepartmentId = 8,
                            Name = "Branch-II"
                        },
                        new
                        {
                            Id = 12,
                            DepartmentId = 9,
                            Name = "Branch-II"
                        },
                        new
                        {
                            Id = 13,
                            DepartmentId = 5,
                            Name = "Branch-III"
                        },
                        new
                        {
                            Id = 14,
                            DepartmentId = 6,
                            Name = "Branch-III"
                        },
                        new
                        {
                            Id = 15,
                            DepartmentId = 7,
                            Name = "Branch-III"
                        },
                        new
                        {
                            Id = 16,
                            DepartmentId = 8,
                            Name = "Branch-III"
                        },
                        new
                        {
                            Id = 17,
                            DepartmentId = 9,
                            Name = "Branch-III"
                        });
                });

            modelBuilder.Entity("BaseLibrary.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("citys");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 1,
                            Name = "Dhaka"
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 1,
                            Name = "Chittagong"
                        },
                        new
                        {
                            Id = 3,
                            CountryId = 1,
                            Name = "Sylhet"
                        },
                        new
                        {
                            Id = 4,
                            CountryId = 1,
                            Name = "Khulna"
                        },
                        new
                        {
                            Id = 5,
                            CountryId = 2,
                            Name = "New Delhi"
                        },
                        new
                        {
                            Id = 6,
                            CountryId = 2,
                            Name = "Mumbai"
                        },
                        new
                        {
                            Id = 7,
                            CountryId = 3,
                            Name = "Toronto"
                        },
                        new
                        {
                            Id = 8,
                            CountryId = 3,
                            Name = "Hamilton"
                        },
                        new
                        {
                            Id = 9,
                            CountryId = 3,
                            Name = "Montreal"
                        },
                        new
                        {
                            Id = 10,
                            CountryId = 4,
                            Name = "Kathmandu"
                        },
                        new
                        {
                            Id = 11,
                            CountryId = 4,
                            Name = "Lalitpur"
                        },
                        new
                        {
                            Id = 12,
                            CountryId = 4,
                            Name = "Dharan"
                        },
                        new
                        {
                            Id = 13,
                            CountryId = 5,
                            Name = "Dubai"
                        },
                        new
                        {
                            Id = 14,
                            CountryId = 5,
                            Name = "Abu Dhabi"
                        },
                        new
                        {
                            Id = 15,
                            CountryId = 5,
                            Name = "Sharjah"
                        });
                });

            modelBuilder.Entity("BaseLibrary.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Bangladesh"
                        },
                        new
                        {
                            Id = 2,
                            Name = "India"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Canada"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Nepal"
                        },
                        new
                        {
                            Id = 5,
                            Name = "UAE"
                        });
                });

            modelBuilder.Entity("BaseLibrary.Entities.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GeneralDepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GeneralDepartmentId");

                    b.ToTable("departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GeneralDepartmentId = 1,
                            Name = "SQL Server Management"
                        },
                        new
                        {
                            Id = 2,
                            GeneralDepartmentId = 1,
                            Name = "Angular"
                        },
                        new
                        {
                            Id = 3,
                            GeneralDepartmentId = 1,
                            Name = "MAUI"
                        },
                        new
                        {
                            Id = 4,
                            GeneralDepartmentId = 2,
                            Name = "Research & Development"
                        },
                        new
                        {
                            Id = 5,
                            GeneralDepartmentId = 2,
                            Name = "Quality Assurance"
                        },
                        new
                        {
                            Id = 6,
                            GeneralDepartmentId = 2,
                            Name = "Production"
                        },
                        new
                        {
                            Id = 7,
                            GeneralDepartmentId = 3,
                            Name = "Storage"
                        },
                        new
                        {
                            Id = 8,
                            GeneralDepartmentId = 3,
                            Name = "Food"
                        },
                        new
                        {
                            Id = 9,
                            GeneralDepartmentId = 3,
                            Name = "Skin Care"
                        });
                });

            modelBuilder.Entity("BaseLibrary.Entities.Doctor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("MedicalDiagnose")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MedicalRecommendation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Doctors");
                });

            modelBuilder.Entity("BaseLibrary.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("CivilId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Other")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelephoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TownId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("TownId");

                    b.ToTable("employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Sylhet, Bangaladesh",
                            BranchId = 1,
                            CivilId = "782346827",
                            FileNumber = "121265",
                            JobName = "Software Developer",
                            Name = "Rahim Miah",
                            Other = "",
                            Photo = "employee.png",
                            TelephoneNumber = "893479321",
                            TownId = 1
                        },
                        new
                        {
                            Id = 2,
                            Address = "Shewrapara ,Dhaka, Bangaladesh",
                            BranchId = 2,
                            CivilId = "8934792187",
                            FileNumber = "121264",
                            JobName = "Software Developer",
                            Name = "Karim",
                            Other = "",
                            Photo = "employee.png",
                            TelephoneNumber = "1984739287",
                            TownId = 2
                        },
                        new
                        {
                            Id = 3,
                            Address = "Sylhet, Bangaladesh",
                            BranchId = 3,
                            CivilId = "19834792",
                            FileNumber = "121263",
                            JobName = "Software Developer",
                            Name = "Ratul",
                            Other = "",
                            Photo = "employee.png",
                            TelephoneNumber = "984312487432",
                            TownId = 3
                        },
                        new
                        {
                            Id = 4,
                            Address = "Shewrapara ,Dhaka, Bangaladesh",
                            BranchId = 4,
                            CivilId = "93847913289",
                            FileNumber = "121262",
                            JobName = "Manager",
                            Name = "Mohib",
                            Other = "",
                            Photo = "employee.png",
                            TelephoneNumber = "8957981237498",
                            TownId = 4
                        },
                        new
                        {
                            Id = 5,
                            Address = "Sylhet, Bangaladesh",
                            BranchId = 5,
                            CivilId = "18973498127",
                            FileNumber = "121261",
                            JobName = "Manager",
                            Name = "Osman",
                            Other = "",
                            Photo = "employee.png",
                            TelephoneNumber = "98475931279348",
                            TownId = 5
                        },
                        new
                        {
                            Id = 6,
                            Address = "Sylhet, Bangaladesh",
                            BranchId = 6,
                            CivilId = "187349178",
                            FileNumber = "121260",
                            JobName = "Manager",
                            Name = "Ayesha",
                            Other = "",
                            Photo = "employee.png",
                            TelephoneNumber = "89317498321794",
                            TownId = 6
                        },
                        new
                        {
                            Id = 7,
                            Address = "Shewrapara ,Dhaka, Bangaladesh",
                            BranchId = 7,
                            CivilId = "33895443",
                            FileNumber = "121259",
                            JobName = "Manager",
                            Name = "Azad",
                            Other = "",
                            Photo = "employee.png",
                            TelephoneNumber = "893427493217",
                            TownId = 7
                        },
                        new
                        {
                            Id = 8,
                            Address = "Shewrapara ,Dhaka, Bangaladesh",
                            BranchId = 8,
                            CivilId = "39827981279",
                            FileNumber = "121258",
                            JobName = "Manager",
                            Name = "Siddika",
                            Other = "",
                            Photo = "employee.png",
                            TelephoneNumber = "983479138274",
                            TownId = 8
                        },
                        new
                        {
                            Id = 9,
                            Address = "Sylhet, Bangaladesh",
                            BranchId = 9,
                            CivilId = "8437912834",
                            FileNumber = "121257",
                            JobName = "Manager",
                            Name = "Farjana",
                            Other = "",
                            Photo = "employee.png",
                            TelephoneNumber = "89715873749",
                            TownId = 9
                        },
                        new
                        {
                            Id = 10,
                            Address = "Sylhet, Bangaladesh",
                            BranchId = 10,
                            CivilId = "891234798",
                            FileNumber = "121256",
                            JobName = "Manager",
                            Name = "Yeasmin",
                            Other = "",
                            Photo = "employee.png",
                            TelephoneNumber = "9482713718",
                            TownId = 10
                        },
                        new
                        {
                            Id = 11,
                            Address = "Shewrapara ,Dhaka, Bangaladesh",
                            BranchId = 11,
                            CivilId = "8349718324",
                            FileNumber = "121255",
                            JobName = "Operator",
                            Name = "Raju",
                            Other = "",
                            Photo = "employee.png",
                            TelephoneNumber = "8513497493",
                            TownId = 11
                        },
                        new
                        {
                            Id = 12,
                            Address = "Sylhet, Bangaladesh",
                            BranchId = 12,
                            CivilId = "1893247982",
                            FileNumber = "121254",
                            JobName = "Operator",
                            Name = "Akib",
                            Other = "",
                            Photo = "employee.png",
                            TelephoneNumber = "9435712837498",
                            TownId = 12
                        },
                        new
                        {
                            Id = 13,
                            Address = "Sylhet, Bangaladesh",
                            BranchId = 13,
                            CivilId = "348917283947",
                            FileNumber = "121253",
                            JobName = "Worker",
                            Name = "Rahid",
                            Other = "",
                            Photo = "employee.png",
                            TelephoneNumber = "8579938479",
                            TownId = 13
                        },
                        new
                        {
                            Id = 14,
                            Address = "Shewrapara ,Dhaka, Bangaladesh",
                            BranchId = 14,
                            CivilId = "54389727",
                            FileNumber = "121252",
                            JobName = "Worker",
                            Name = "Musarraf",
                            Other = "",
                            Photo = "employee.png",
                            TelephoneNumber = "0189734857913",
                            TownId = 14
                        },
                        new
                        {
                            Id = 15,
                            Address = "Sylhet, Bangaladesh",
                            BranchId = 15,
                            CivilId = "892347113",
                            FileNumber = "121251",
                            JobName = "Worker",
                            Name = "Mehedi",
                            Other = "",
                            Photo = "employee.png",
                            TelephoneNumber = "891749181990",
                            TownId = 1
                        },
                        new
                        {
                            Id = 16,
                            Address = "Sylhet, Bangaladesh",
                            BranchId = 16,
                            CivilId = "4378346872",
                            FileNumber = "121250",
                            JobName = "Worker",
                            Name = "Mitu",
                            Other = "",
                            Photo = "employee.png",
                            TelephoneNumber = "847391237879`",
                            TownId = 11
                        },
                        new
                        {
                            Id = 17,
                            Address = "Shewrapara ,Dhaka, Bangaladesh",
                            BranchId = 17,
                            CivilId = "8493217981",
                            FileNumber = "121249",
                            JobName = "Manager",
                            Name = "Moon",
                            Other = "",
                            Photo = "employee.png",
                            TelephoneNumber = "197493879238",
                            TownId = 12
                        },
                        new
                        {
                            Id = 18,
                            Address = "Sylhet, Bangaladesh",
                            BranchId = 1,
                            CivilId = "9812473928",
                            FileNumber = "121248",
                            JobName = "Software Developer",
                            Name = "Tuli",
                            Other = "",
                            Photo = "employee.png",
                            TelephoneNumber = "78914379821",
                            TownId = 13
                        },
                        new
                        {
                            Id = 19,
                            Address = "Sylhet, Bangaladesh",
                            BranchId = 1,
                            CivilId = "8971239487",
                            FileNumber = "121247",
                            JobName = "Software Developer",
                            Name = "Tasrif",
                            Other = "",
                            Photo = "employee.png",
                            TelephoneNumber = "98734918391",
                            TownId = 14
                        },
                        new
                        {
                            Id = 20,
                            Address = "Shewrapara ,Dhaka, Bangaladesh",
                            BranchId = 2,
                            CivilId = "483729753",
                            FileNumber = "121246",
                            JobName = "Software Developer",
                            Name = "Nahid",
                            Other = "",
                            Photo = "employee.png",
                            TelephoneNumber = "18473978127",
                            TownId = 10
                        },
                        new
                        {
                            Id = 21,
                            Address = "Sylhet, Bangaladesh",
                            BranchId = 2,
                            CivilId = "891738429",
                            FileNumber = "121245",
                            JobName = "Software Developer",
                            Name = "Kamrul",
                            Other = "",
                            Photo = "employee.png",
                            TelephoneNumber = "198723492817",
                            TownId = 9
                        },
                        new
                        {
                            Id = 22,
                            Address = "Sylhet, Bangaladesh",
                            BranchId = 2,
                            CivilId = "7891349283",
                            FileNumber = "121244",
                            JobName = "Software Developer",
                            Name = "Azim",
                            Other = "",
                            Photo = "employee.png",
                            TelephoneNumber = "891734972832",
                            TownId = 6
                        },
                        new
                        {
                            Id = 23,
                            Address = "Shewrapara ,Dhaka, Bangaladesh",
                            BranchId = 2,
                            CivilId = "984237834",
                            FileNumber = "121210",
                            JobName = "Software Developer",
                            Name = "Tushar",
                            Other = "",
                            Photo = "employee.png",
                            TelephoneNumber = "19874392187948",
                            TownId = 4
                        },
                        new
                        {
                            Id = 24,
                            Address = "Sylhet, Bangaladesh",
                            BranchId = 2,
                            CivilId = "3642431234",
                            FileNumber = "121211",
                            JobName = "Software Developer",
                            Name = "Lamiya",
                            Other = "",
                            Photo = "employee.png",
                            TelephoneNumber = "893127498172",
                            TownId = 6
                        },
                        new
                        {
                            Id = 25,
                            Address = "Shewrapara ,Dhaka, Bangaladesh",
                            BranchId = 1,
                            CivilId = "25412413421",
                            FileNumber = "121212",
                            JobName = "Software Developer",
                            Name = "Rakib",
                            Other = "",
                            Photo = "employee.png",
                            TelephoneNumber = "1987438927198",
                            TownId = 2
                        },
                        new
                        {
                            Id = 26,
                            Address = "Sylhet, Bangaladesh",
                            BranchId = 4,
                            CivilId = "2541234123",
                            FileNumber = "121213",
                            JobName = "Worker",
                            Name = "Yeasin",
                            Other = "",
                            Photo = "employee.png",
                            TelephoneNumber = "9148379128",
                            TownId = 9
                        },
                        new
                        {
                            Id = 27,
                            Address = "Shewrapara ,Dhaka, Bangaladesh",
                            BranchId = 4,
                            CivilId = "2451234234",
                            FileNumber = "121214",
                            JobName = "Operator",
                            Name = "Faruk",
                            Other = "",
                            Photo = "employee.png",
                            TelephoneNumber = "3874981278",
                            TownId = 10
                        });
                });

            modelBuilder.Entity("BaseLibrary.Entities.GeneralDepartment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("generalDepartments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "IT"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Medicine"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Baby Products"
                        });
                });

            modelBuilder.Entity("BaseLibrary.Entities.Overtime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OverTimeTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OverTimeTypeId");

                    b.ToTable("Overtimes");
                });

            modelBuilder.Entity("BaseLibrary.Entities.OvertimeType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OvertimesTypes");
                });

            modelBuilder.Entity("BaseLibrary.Entities.RefreshTokenInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RefreshTokenInfos");
                });

            modelBuilder.Entity("BaseLibrary.Entities.Sanction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Punishment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PunishmentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SanctionTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SanctionTypeId");

                    b.ToTable("Sanctions");
                });

            modelBuilder.Entity("BaseLibrary.Entities.SanctionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SanctionTypes");
                });

            modelBuilder.Entity("BaseLibrary.Entities.SystemRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SystemRoles");
                });

            modelBuilder.Entity("BaseLibrary.Entities.Town", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("towns");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityId = 1,
                            Name = "Mirpur"
                        },
                        new
                        {
                            Id = 2,
                            CityId = 1,
                            Name = "Banani"
                        },
                        new
                        {
                            Id = 3,
                            CityId = 2,
                            Name = "Cox's Bazar"
                        },
                        new
                        {
                            Id = 4,
                            CityId = 3,
                            Name = "AramBag"
                        },
                        new
                        {
                            Id = 5,
                            CityId = 4,
                            Name = "Farazipara"
                        },
                        new
                        {
                            Id = 6,
                            CityId = 5,
                            Name = "Mahipalpur"
                        },
                        new
                        {
                            Id = 7,
                            CityId = 6,
                            Name = "Andheri"
                        },
                        new
                        {
                            Id = 8,
                            CityId = 7,
                            Name = "North York"
                        },
                        new
                        {
                            Id = 9,
                            CityId = 8,
                            Name = "Flamborough"
                        },
                        new
                        {
                            Id = 10,
                            CityId = 9,
                            Name = "Villeray"
                        },
                        new
                        {
                            Id = 11,
                            CityId = 10,
                            Name = "Maharajgunj"
                        },
                        new
                        {
                            Id = 12,
                            CityId = 11,
                            Name = "Sanepa"
                        },
                        new
                        {
                            Id = 13,
                            CityId = 12,
                            Name = "Panbari"
                        },
                        new
                        {
                            Id = 14,
                            CityId = 13,
                            Name = "Al Quoz"
                        },
                        new
                        {
                            Id = 15,
                            CityId = 14,
                            Name = "Al Mushrif"
                        },
                        new
                        {
                            Id = 16,
                            CityId = 14,
                            Name = "Mafraq Industrial Area"
                        },
                        new
                        {
                            Id = 17,
                            CityId = 15,
                            Name = "Hay Al Atain"
                        });
                });

            modelBuilder.Entity("BaseLibrary.Entities.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("BaseLibrary.Entities.Vacation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfDays")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("VacationTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VacationTypeId");

                    b.ToTable("Vacations");
                });

            modelBuilder.Entity("BaseLibrary.Entities.VacationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("VacationsTypes");
                });

            modelBuilder.Entity("BaseLibrary.Entities.Branch", b =>
                {
                    b.HasOne("BaseLibrary.Entities.Department", "Department")
                        .WithMany("Branches")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("BaseLibrary.Entities.City", b =>
                {
                    b.HasOne("BaseLibrary.Entities.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("BaseLibrary.Entities.Department", b =>
                {
                    b.HasOne("BaseLibrary.Entities.GeneralDepartment", "GeneralDepartment")
                        .WithMany("Departments")
                        .HasForeignKey("GeneralDepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GeneralDepartment");
                });

            modelBuilder.Entity("BaseLibrary.Entities.Employee", b =>
                {
                    b.HasOne("BaseLibrary.Entities.Branch", "Branch")
                        .WithMany("Employees")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BaseLibrary.Entities.Town", "Town")
                        .WithMany("Employees")
                        .HasForeignKey("TownId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("Town");
                });

            modelBuilder.Entity("BaseLibrary.Entities.Overtime", b =>
                {
                    b.HasOne("BaseLibrary.Entities.OvertimeType", "OvertimeType")
                        .WithMany("Overtimes")
                        .HasForeignKey("OverTimeTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OvertimeType");
                });

            modelBuilder.Entity("BaseLibrary.Entities.Sanction", b =>
                {
                    b.HasOne("BaseLibrary.Entities.SanctionType", "SanctionType")
                        .WithMany("Sanctions")
                        .HasForeignKey("SanctionTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SanctionType");
                });

            modelBuilder.Entity("BaseLibrary.Entities.Town", b =>
                {
                    b.HasOne("BaseLibrary.Entities.City", "City")
                        .WithMany("Towns")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("BaseLibrary.Entities.Vacation", b =>
                {
                    b.HasOne("BaseLibrary.Entities.VacationType", "VacationType")
                        .WithMany("Vacations")
                        .HasForeignKey("VacationTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VacationType");
                });

            modelBuilder.Entity("BaseLibrary.Entities.Branch", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("BaseLibrary.Entities.City", b =>
                {
                    b.Navigation("Towns");
                });

            modelBuilder.Entity("BaseLibrary.Entities.Country", b =>
                {
                    b.Navigation("Cities");
                });

            modelBuilder.Entity("BaseLibrary.Entities.Department", b =>
                {
                    b.Navigation("Branches");
                });

            modelBuilder.Entity("BaseLibrary.Entities.GeneralDepartment", b =>
                {
                    b.Navigation("Departments");
                });

            modelBuilder.Entity("BaseLibrary.Entities.OvertimeType", b =>
                {
                    b.Navigation("Overtimes");
                });

            modelBuilder.Entity("BaseLibrary.Entities.SanctionType", b =>
                {
                    b.Navigation("Sanctions");
                });

            modelBuilder.Entity("BaseLibrary.Entities.Town", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("BaseLibrary.Entities.VacationType", b =>
                {
                    b.Navigation("Vacations");
                });
#pragma warning restore 612, 618
        }
    }
}
